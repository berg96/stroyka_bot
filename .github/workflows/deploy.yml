name: Deploy to Yandex Cloud VM

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/stroyka-bot:latest
  REMOTE_DIR: /home/${{ secrets.VM_USER }}/stroyka-bot

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker login to YCR via OAuth token
        run: |
          TOKEN="${{ secrets.YCR_TOKEN }}"
          # echo -n чтобы не добавить лишний \n
          echo -n "$TOKEN" | docker login -u oauth --password-stdin "cr.yandex/${{ secrets.YC_REGISTRY_ID }}"

      - name: Build & push Docker image
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Create .env from secret
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Prepare SSH key
        run: |
          echo "${{ secrets.VM_SSH_KEY }}" > deploy_key
          chmod 600 deploy_key

      - name: Copy files to VM
        run: |
          scp -o StrictHostKeyChecking=no -i deploy_key \
            .env docker-compose.yml \
            ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:$REMOTE_DIR

      - name: SSH and restart bot
        run: |
          ssh -o StrictHostKeyChecking=no -i deploy_key \
            ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
              cd $REMOTE_DIR
              docker-compose pull
              docker-compose up -d --remove-orphans
            EOF

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to:      ${{ secrets.TELEGRAM_TO }}
          token:   ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            В ${{ github.repository }}
            ${{ github.actor }} запушил коммит
            "${{ github.event.commits[0].message }}"
            Деплой stroyka_bot выполнен!
